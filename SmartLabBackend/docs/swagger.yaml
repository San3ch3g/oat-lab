basePath: /
definitions:
  controllers.CheckCodeRequest:
    properties:
      code:
        type: string
      email:
        type: string
    type: object
  controllers.CheckCodeResponse:
    properties:
      message:
        type: string
      userId:
        type: integer
    type: object
  controllers.CreateCatalogRequest:
    properties:
      bio:
        type: string
      category:
        type: string
      description:
        type: string
      name:
        type: string
      preparation:
        type: string
      price:
        type: string
      timeResult:
        type: string
    type: object
  controllers.CreateCatalogResponse:
    properties:
      message:
        type: string
      success:
        type: boolean
    type: object
  controllers.CreateMedCardRequest:
    properties:
      birthDate:
        type: string
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      middleName:
        type: string
      sex:
        $ref: '#/definitions/models.SexType'
    type: object
  controllers.CreateMedCardResponse:
    properties:
      message:
        type: string
      success:
        type: boolean
    type: object
  controllers.DeleteCatalogItemRequest:
    properties:
      id:
        type: integer
    type: object
  controllers.DeleteCatalogItemResponse:
    properties:
      message:
        type: string
      success:
        type: boolean
    type: object
  controllers.GetCatalogItemByIdResponse:
    properties:
      bio:
        type: string
      category:
        type: string
      createdAt:
        type: string
      description:
        type: string
      errorMessage:
        type: string
      id:
        type: integer
      imageUrl:
        type: string
      name:
        type: string
      preparation:
        type: string
      price:
        type: string
      timeRes:
        type: string
    type: object
  controllers.GetCatalogResponse:
    properties:
      catalogItems:
        items:
          $ref: '#/definitions/models.CatalogItem'
        type: array
      errorMessage:
        type: string
    type: object
  controllers.MedCardRequest:
    properties:
      id:
        type: integer
    type: object
  controllers.MedCardResponse:
    properties:
      message:
        type: string
      success:
        type: boolean
    type: object
  controllers.MedCardsInfoResponse:
    properties:
      errorMessage:
        type: string
      profileInfo:
        items:
          $ref: '#/definitions/models.MedCard'
        type: array
    type: object
  controllers.SendCodeAgainRequest:
    properties:
      email:
        type: string
    type: object
  controllers.SendCodeAgainResponse:
    properties:
      success:
        type: boolean
    type: object
  controllers.SendCodeRequest:
    properties:
      email:
        type: string
    type: object
  controllers.SendCodeResponse:
    properties:
      errorMessage:
        type: string
      success:
        type: boolean
    type: object
  controllers.UpdateMedCardRequest:
    properties:
      birthDate:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      medCardId:
        type: integer
      middleName:
        type: string
      profileImageUrl:
        type: string
      sex:
        type: string
    type: object
  controllers.UpdateMedCardResponse:
    properties:
      errorMessage:
        type: string
      success:
        type: boolean
    type: object
  models.CatalogItem:
    properties:
      bio:
        type: string
      category:
        $ref: '#/definitions/models.CatalogItemCategory'
      createdAt:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      preparation:
        type: string
      price:
        type: string
      timeResult:
        type: string
    type: object
  models.CatalogItemCategory:
    enum:
    - all
    - news
    - covid
    - popular
    - complex
    type: string
    x-enum-varnames:
    - Default
    - News
    - Covid
    - Popular
    - Complex
  models.MedCard:
    properties:
      birthDate:
        type: string
      firstName:
        type: string
      id:
        type: integer
      lastName:
        type: string
      middleName:
        type: string
      profileImageUrl:
        type: string
      sex:
        $ref: '#/definitions/models.SexType'
      userId:
        type: integer
    type: object
  models.SexType:
    enum:
    - M
    - W
    type: string
    x-enum-varnames:
    - MaleSex
    - WomanSex
host: 407e-95-189-144-121.ngrok-free.app
info:
  contact: {}
  description: API server for Smart Lab
  title: Smart Lab
  version: "1.0"
paths:
  /auth/check-code:
    post:
      consumes:
      - application/json
      description: Проверяет код, отправленный на указанный email
      parameters:
      - description: Запрос на проверку кода
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.CheckCodeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.CheckCodeResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.CheckCodeResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/controllers.CheckCodeResponse'
      summary: Проверка кода
      tags:
      - Auth
  /auth/send-code:
    post:
      consumes:
      - application/json
      description: Отправляет код на email и создаёт запись в бд
      parameters:
      - description: Запрос для отправки кода и создания записи в бд
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.SendCodeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.SendCodeResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.SendCodeResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.SendCodeResponse'
      summary: Проверка email
      tags:
      - Auth
  /auth/send-code-again:
    post:
      consumes:
      - application/json
      description: Повторно отправляет код подтверждения на email пользователя
      parameters:
      - description: Запрос для повторной отправки кода подтверждения
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.SendCodeAgainRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.SendCodeAgainResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.SendCodeAgainResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.SendCodeAgainResponse'
      summary: Повторная отправка кода подтверждения
      tags:
      - Auth
  /catalog:
    delete:
      consumes:
      - application/json
      description: Удаляет новость из каталога по идентификатору
      parameters:
      - description: Запрос для удаления новости из каталога
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.DeleteCatalogItemRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.DeleteCatalogItemResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.DeleteCatalogItemResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.DeleteCatalogItemResponse'
      summary: Удаление новости из каталога
      tags:
      - Catalog
  /catalog/:
    get:
      consumes:
      - application/json
      description: Получает новости из каталога по категории
      parameters:
      - description: Категория для получения новостей из каталога
        in: query
        name: category
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.GetCatalogResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.GetCatalogResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.GetCatalogResponse'
      summary: Получение новостей из каталога
      tags:
      - Catalog
    post:
      consumes:
      - application/json
      description: Создает новую новость в каталоге
      parameters:
      - description: Запрос для создания новости
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.CreateCatalogRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/controllers.CreateCatalogResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.CreateCatalogResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.CreateCatalogResponse'
      summary: Создание новости
      tags:
      - Catalog
  /catalog/by-id:
    get:
      consumes:
      - application/json
      description: Получает элемент каталога по его ID.
      parameters:
      - description: ID элемента каталога
        in: query
        name: itemId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.GetCatalogItemByIdResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.GetCatalogItemByIdResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.GetCatalogItemByIdResponse'
      summary: Получить элемент каталога по ID.
      tags:
      - Catalog
  /med-card:
    delete:
      consumes:
      - application/json
      description: Удаляет мед карты пользователя по идентификатору
      parameters:
      - description: Запрос для удаления мед карты пользователя
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.MedCardRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.MedCardResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.MedCardResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.MedCardResponse'
      summary: Удаление мед карты пользователя
      tags:
      - MedCards
    get:
      consumes:
      - application/json
      description: Получает информацию о мед картах пользователя по email
      parameters:
      - description: Email пользователя
        in: query
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.MedCardsInfoResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.MedCardsInfoResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.MedCardsInfoResponse'
      summary: Получение информации о мед картах пользователя
      tags:
      - MedCards
    post:
      consumes:
      - application/json
      description: Создает мед карты пользователя с указанными данными
      parameters:
      - description: Запрос для создания мед карты пользователя
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.CreateMedCardRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/controllers.CreateMedCardResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.CreateMedCardResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.CreateMedCardResponse'
      summary: Создание мед карты пользователя
      tags:
      - MedCards
    put:
      consumes:
      - application/json
      description: Обновляет информацию мед карты
      parameters:
      - description: Запрос для создания профиля пользователя
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.UpdateMedCardRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.UpdateMedCardResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.UpdateMedCardResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.UpdateMedCardResponse'
      summary: Обновление информации мед карты
      tags:
      - MedCards
swagger: "2.0"
